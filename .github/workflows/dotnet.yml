name: .NET + Appium CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest  # Use Ubuntu as the GitHub-hosted runner
    strategy:
      matrix:
        api-level: [26]  # Modify as needed for different API levels
        target: [default]

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'

    - name: Install Appium
      run: npm install -g appium

    # Install Android SDK and build-tools
    - name: Install Android SDK and Build Tools
      run: |
        sudo apt-get update
        sudo apt-get install -y android-sdk
        sdkmanager "platform-tools" "build-tools;33.0.3" "platforms;android-26"

    # Set up environment variables for Android SDK
    - name: Set up Android Environment Variables
      run: |
        echo "ANDROID_HOME=/usr/local/lib/android/sdk" >> $GITHUB_ENV
        echo "PATH=$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

    # Install the system image required for the emulator (API 26 in this case)
    - name: Install Android System Image
      run: |
        sdkmanager "system-images;android-26;google_apis;x86_64"
    
    # Create an Android emulator (AVD)
    - name: Create Android Emulator
      run: |
        echo "no" | avdmanager create avd -n testAVD -k "system-images;android-26;google_apis;x86_64" --force

    # Start the Android emulator (headless mode for CI)
    - name: Start Android Emulator
      run: |
        emulator -avd testAVD -no-window -no-audio -no-boot-anim &
      timeout-minutes: 3

    # Wait for the emulator to start fully
    - name: Wait for Emulator to Boot
      run: |
        adb wait-for-device
        adb shell input keyevent 82
      timeout-minutes: 3

    # Verify that the emulator is running
    - name: Verify Emulator is Running
      run: adb devices

    - name: Install UIAutomator2 Driver
      run: appium driver install uiautomator2

    - name: Run Appium Server
      run: |
        chmod +x ./Scripts/RunAppiumServer.sh  # Ensure the script is executable
        ./Scripts/RunAppiumServer.sh &

    - name: Wait for Appium
      run: sleep 30  # Increased wait time for Appium server

    # Restore dependencies in the HolyQuran directory
    - name: Restore dependencies
      run: dotnet restore --verbosity detailed
      working-directory: HolyQuran

    # Build the project in the HolyQuran directory
    - name: Build
      run: dotnet build --no-restore --verbosity detailed
      working-directory: HolyQuran

    # Run tests in the HolyQuran directory
    - name: Test
      run: dotnet test --no-build --verbosity detailed
      working-directory: HolyQuran
